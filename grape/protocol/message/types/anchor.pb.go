// Code generated by protoc-gen-go.
// source: types/anchor.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	types/anchor.proto
	types/business_card.proto
	types/business_notify.proto
	types/card.proto
	types/image.proto
	types/json.proto
	types/location.proto
	types/notice.proto
	types/text.proto
	types/voice.proto

It has these top-level messages:
	Anchor
	BusinessCard
	BusinessNotify
	Card
	Image
	Json
	Location
	Notice
	Text
	Voice
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Anchor struct {
	Href  string `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	Start int32  `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	Len   int32  `protobuf:"varint,3,opt,name=len" json:"len,omitempty"`
}

func (m *Anchor) Reset()                    { *m = Anchor{} }
func (m *Anchor) String() string            { return proto.CompactTextString(m) }
func (*Anchor) ProtoMessage()               {}
func (*Anchor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Anchor) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *Anchor) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Anchor) GetLen() int32 {
	if m != nil {
		return m.Len
	}
	return 0
}

func init() {
	proto.RegisterType((*Anchor)(nil), "protocol.message.types.Anchor")
}

func init() { proto.RegisterFile("types/anchor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x4f, 0xcc, 0x4b, 0xce, 0xc8, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12,
	0x03, 0x53, 0xc9, 0xf9, 0x39, 0x7a, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x7a, 0x60, 0x45,
	0x4a, 0x2e, 0x5c, 0x6c, 0x8e, 0x60, 0x75, 0x42, 0x42, 0x5c, 0x2c, 0x19, 0x45, 0xa9, 0x69, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x08, 0x17, 0x6b, 0x71, 0x49, 0x62, 0x51,
	0x89, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x84, 0x23, 0x24, 0xc0, 0xc5, 0x9c, 0x93, 0x9a,
	0x27, 0xc1, 0x0c, 0x16, 0x03, 0x31, 0x9d, 0x5c, 0xb8, 0x54, 0x92, 0xf3, 0x73, 0xf5, 0x72, 0x53,
	0x53, 0x72, 0x32, 0xf3, 0xb2, 0x53, 0xa1, 0x96, 0x62, 0xd8, 0x16, 0x25, 0x93, 0x5e, 0x94, 0x58,
	0x90, 0xaa, 0x0f, 0x93, 0xd5, 0x87, 0xca, 0xea, 0x83, 0x65, 0x93, 0xd8, 0xc0, 0xe2, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x82, 0xc3, 0x3e, 0xc0, 0x00, 0x00, 0x00,
}
