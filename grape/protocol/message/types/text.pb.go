// Code generated by protoc-gen-go.
// source: types/text.proto
// DO NOT EDIT!

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protocol_message_misc "go-test/grape/protocol/message/misc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 文本消息
type Text struct {
	Content string                        `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Anchors []*Anchor                     `protobuf:"bytes,2,rep,name=anchors" json:"anchors,omitempty"`
	AtUsers []*protocol_message_misc.User `protobuf:"bytes,3,rep,name=atUsers" json:"atUsers,omitempty"`
}

func (m *Text) Reset()                    { *m = Text{} }
func (m *Text) String() string            { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()               {}
func (*Text) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Text) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Text) GetAnchors() []*Anchor {
	if m != nil {
		return m.Anchors
	}
	return nil
}

func (m *Text) GetAtUsers() []*protocol_message_misc.User {
	if m != nil {
		return m.AtUsers
	}
	return nil
}

func init() {
	proto.RegisterType((*Text)(nil), "protocol.message.types.Text")
}

func init() { proto.RegisterFile("types/text.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2f, 0x49, 0xad, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x03, 0x53,
	0xc9, 0xf9, 0x39, 0x7a, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x7a, 0x60, 0x25, 0x52, 0x42,
	0x10, 0x95, 0x89, 0x79, 0xc9, 0x19, 0xf9, 0x45, 0x10, 0xb5, 0x52, 0xfc, 0xb9, 0x99, 0xc5, 0xc9,
	0xfa, 0xa5, 0xc5, 0xa9, 0x50, 0x01, 0xa5, 0x89, 0x8c, 0x5c, 0x2c, 0x21, 0xa9, 0x15, 0x25, 0x42,
	0x12, 0x5c, 0xec, 0xc9, 0xf9, 0x79, 0x25, 0xa9, 0x79, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x30, 0xae, 0x90, 0x05, 0x17, 0x3b, 0xc4, 0x8c, 0x62, 0x09, 0x26, 0x05, 0x66, 0x0d, 0x6e,
	0x23, 0x39, 0x3d, 0xec, 0x36, 0xea, 0x39, 0x82, 0x95, 0x05, 0xc1, 0x94, 0x0b, 0x99, 0x72, 0xb1,
	0x27, 0x96, 0x84, 0x16, 0xa7, 0x16, 0x15, 0x4b, 0x30, 0x83, 0x75, 0x4a, 0x63, 0xea, 0x04, 0x39,
	0x48, 0x0f, 0xa4, 0x26, 0x08, 0xa6, 0xd6, 0xc9, 0x85, 0x4b, 0x25, 0x39, 0x3f, 0x57, 0x2f, 0x37,
	0x35, 0x25, 0x27, 0x33, 0x2f, 0x1b, 0xe6, 0x54, 0x0c, 0xeb, 0xa2, 0x64, 0xd2, 0x8b, 0x12, 0x0b,
	0x52, 0xf5, 0x61, 0xb2, 0xfa, 0x50, 0x59, 0x7d, 0xb0, 0x6c, 0x12, 0x1b, 0x58, 0xdc, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0xda, 0x8f, 0x1f, 0xfb, 0x31, 0x01, 0x00, 0x00,
}
