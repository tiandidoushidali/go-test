// Code generated by protoc-gen-go.
// source: misc/user.proto
// DO NOT EDIT!

package misc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Reference int32  `protobuf:"varint,2,opt,name=reference" json:"reference,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Avatar    string `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
	Type      int32  `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	Hospital  string `protobuf:"bytes,6,opt,name=hospital" json:"hospital,omitempty"`
	Title     string `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Section   string `protobuf:"bytes,8,opt,name=section" json:"section,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetReference() int32 {
	if m != nil {
		return m.Reference
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *User) GetHospital() string {
	if m != nil {
		return m.Hospital
	}
	return ""
}

func (m *User) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *User) GetSection() string {
	if m != nil {
		return m.Section
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "protocol.message.misc.User")
}

func init() { proto.RegisterFile("misc/user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x49, 0xb7, 0xed, 0xee, 0xce, 0x41, 0x61, 0x50, 0x19, 0xd4, 0x43, 0xd1, 0x4b, 0x4f,
	0xed, 0xc1, 0x37, 0xd8, 0x47, 0x28, 0x78, 0xf1, 0x16, 0xd3, 0x71, 0x0d, 0x36, 0x4d, 0x48, 0xa2,
	0xe0, 0xdb, 0xf9, 0x68, 0xd2, 0x71, 0xab, 0xe0, 0x29, 0xf3, 0x7f, 0xdf, 0x4f, 0xe0, 0x87, 0x73,
	0x67, 0x93, 0xe9, 0xdf, 0x13, 0xc7, 0x2e, 0x44, 0x9f, 0x3d, 0x5e, 0xca, 0x63, 0xfc, 0xd4, 0x39,
	0x4e, 0x49, 0x1f, 0xb9, 0x5b, 0x1a, 0x77, 0x5f, 0x0a, 0xca, 0xc7, 0xc4, 0x11, 0xcf, 0xa0, 0xb0,
	0x23, 0xa9, 0x46, 0xb5, 0x9b, 0xa1, 0xb0, 0x23, 0xde, 0xc2, 0x3e, 0xf2, 0x0b, 0x47, 0x9e, 0x0d,
	0x53, 0xd1, 0xa8, 0xb6, 0x1a, 0xfe, 0x00, 0x22, 0x94, 0xb3, 0x76, 0x4c, 0x9b, 0x46, 0xb5, 0xfb,
	0x41, 0x6e, 0xbc, 0x82, 0x5a, 0x7f, 0xe8, 0xac, 0x23, 0x95, 0x42, 0x4f, 0x69, 0xe9, 0xe6, 0xcf,
	0xc0, 0x54, 0xc9, 0x27, 0x72, 0xe3, 0x35, 0xec, 0x5e, 0x7d, 0x0a, 0x36, 0xeb, 0x89, 0x6a, 0x69,
	0xff, 0x66, 0xbc, 0x80, 0x2a, 0xdb, 0x3c, 0x31, 0x6d, 0x45, 0xfc, 0x04, 0x24, 0xd8, 0x26, 0x36,
	0xd9, 0xfa, 0x99, 0x76, 0xc2, 0xd7, 0x78, 0x38, 0xc0, 0xbd, 0xf1, 0xae, 0x73, 0x3c, 0x4e, 0x76,
	0x7e, 0x5b, 0x07, 0xff, 0x5f, 0xfa, 0x74, 0x73, 0x8c, 0x3a, 0x70, 0xbf, 0xca, 0xfe, 0x24, 0xfb,
	0x45, 0x3e, 0xd7, 0x82, 0x1f, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x67, 0xf5, 0x55, 0x37,
	0x01, 0x00, 0x00,
}
