package main

import (
	"encoding/base64"
	"encoding/json"
	"fmt"
	"github.com/golang/protobuf/proto"
	"github.com/serialx/hashring"
	"github.com/speps/go-hashids"
	"go-test/grape/protocol/message"
	"path"
)

func main() {
	fmt.Println("path base :", path.Base("/aa/bb/cc/"))
	data := "EgUI686UICIFCLP5vAZi1hQK0RR7InByZXNjcmlwdGlvbiI6eyJlbGVjdHJvbmljIjp7ImlkIjo1MTM1ODQ3LCJ0cmFuc05vIjoiMjIwNTIwMTAxOTg1MzAwMSIsImdlbnJlIjoxLCJ0eXBlIjoxLCJleHBlbnNlQ2F0ZWdvcnkiOjEsImJ1c2luZXNzSWQiOjEsImJ1c2luZXNzU3ViVHlwZSI6MSwiaW50ZXJuZXRIb3NwaXRhbElkIjozLCJzZWN0aW9uSWQiOjEzLCJkb2N0b3JJZCI6Njc0NDY2MzUsInByRG9jdG9ySWQiOjY3NDQ2NjM1LCJwYXRpZW50SWQiOjE0NjczNTMyMCwicGF0aWVudE5hbWUiOiLpmYjlgaXpm4QiLCJwYXRpZW50R2VuZGVyIjoxLCJwYXRpZW50UGhvbmUiOiIxNTg4OTE5MzgxNCIsInBhdGllbnRCaXJ0aGRheSI6MTk3NTAxMDEsInBhdGllbnRBZ2UiOjQ3LCJwYXRpZW50V2VpZ2h0IjoiIiwiZGlzZWFzZSI6IiIsImRpYWdub3NlIjoi5Lq657G75YWN55ar57y66Zm355eF5q+SXFxbSElWXFxd55eF77yM6IK66YOo5oSf5p+TIiwic3RhdHVzIjoxLCJhdWRpdFN0YXR1cyI6MSwic2VhcmNoU3RhdHVzIjowLCJwaGFybWFjaXN0Ijp7Im5hbWUiOiLltJTkuL3nuqIiLCJpbWciOiJodHRwczovL3B1Yi1jZXJ0aWZpY2F0ZS1maWxlLm1lZGxpbmtlci5jb20vMTQ4MTU1NTI4MTkxNjcyMzg0NCIsImZhaWxlZFJlYXNvbiI6IiIsImF1ZGl0VGltZSI6MTY1MzAxMDMzNX0sImRpc3BlbnNpbmciOm51bGwsInBySW1nIjoicHViLW1lZC1wcmVzY3JpcHRpb24ubWVkbGlua2VyLmNvbS8yMjA1MjAxMDE5ODUzMDAxXzJfMTY1MzAxMDIwMDIucG5nIiwicHJQZGYiOiJwdWItbWVkLXByZXNjcmlwdGlvbi5tZWRsaW5rZXIuY29tLzIyMDUyMDEwMTk4NTMwMDFfMl8xNjUzMDEwMjAwMi5wZGYiLCJjcmVhdGVkVGltZSI6IjIwMjItMDUtMjAgMDk6MzA6MDAiLCJjcmVhdGVBdCI6MTY1MzAxMDIwMCwiYnJva2VySWQiOjAsImVzc2VuY2VUeXBlIjoxLCJpc1Rlc3QiOjAsIm9yaWdpbiI6MSwib3JpZ2luQ2hhbm5lbCI6IiIsImlzUmVtZWR5UHIiOmZhbHNlLCJhdWRpdFRpbWUiOjE2NTMwMTAzMzUsIm9sZElkIjowLCJwckNoYW5uZWxUeXBlIjowLCJleHQiOiIiLCJ0aGlyZFBhcnR5VHJhbnMiOiIiLCJyZW1pbmRSZXB1cmNoYXNlRGF5cyI6MCwic2VydmljZUZlZSI6MCwiZHJ1Z1BhaXJzIjowLCJ1c2FnZXMiOiIiLCJzdHJ1Y3R1cmVkVXNhZ2VzIjp7InRha2UiOiIiLCJ1c2FnZSI6IiIsImRvc2FnZSI6MCwiZG9zYWdlVGltZXMiOjAsImV4cGVjdFRvdGFscyI6IiIsInRha2VEYXlzIjoiIn0sInJlbWFyayI6IiIsInByVGFnVHlwZSI6MCwiZHJ1Z1NoYXBlIjowLCJtZWRpY2F0aW9uU3RvcmVJZCI6MCwic2VydmljZVBhY2tJZCI6MCwic2VydmljZVBhY2tQcmljZUlkIjowLCJpc0Fzc2lzdFByIjpmYWxzZSwicHJBc3Npc3RJZCI6MCwiaXNEb2N0b3JDb25maXJtIjpmYWxzZSwicHJBc3Npc3RSb2xlSWQiOjAsIm1lZGljYXJlRGVkdWN0RmVlIjowLCJza2luVGVzdCI6MCwiZG9jdG9yUHJvdmluY2UiOiI2IiwicHJlc1RjbUV4dEZpZWxkcyI6eyJpc1ByZWduYW50IjpmYWxzZSwiaXNEZWNvY3RpbmciOmZhbHNlLCJ0b3RhbFdlaWdodCI6MCwiZHJ1Z1RvdGFsUHJpY2UiOjAsImFkZGl0aW9uIjowLCJpc1RjbUNsaW5pYyI6ZmFsc2UsInByb2Nlc3NUeXBlIjowLCJhdXhNYXRlcmlhbHMiOm51bGx9LCJpc0NvbnRhaW5BZGp1dmFudCI6ZmFsc2UsInNlcnZpY2VQcmljZSI6MCwiaG9zcGl0YWxDb29yZGluYXRlIjoiMTEzLjMyOTU1OSwyMy4xODc2NjQiLCJpc0x0diI6ZmFsc2UsInNlY3Rpb25OYW1lIjoiIiwiY29udGludWVQcklkIjowLCJkaWFnbm9zZVN0cnVjdHVyZWQiOlt7ImNvZGUiOiJCMjQueDAwIiwidGl0bGUiOiLkurrnsbvlhY3nlqvnvLrpmbfnl4Xmr5JcXFtISVZcXF3nl4UifSx7ImNvZGUiOiJKOTguNDE0IiwidGl0bGUiOiLogrrpg6jmhJ/mn5MifV0sInN5bXB0b20iOiIiLCJwYXRpZW50Q2VydE51IjoiNDQwNTI3MTk3NDAzMjUxMjF4IiwiY29uc3VsdGF0aW9uRmVlIjowLCJob3NwaXRhbE5hbWUiOiLmiJDpg73pq5jmlrDmtbflsJTmo67ljLvpmaLkupLogZTnvZHljLvpmaIiLCJjYW5Db250aW51ZSI6ZmFsc2UsInVwZGF0ZWRBdCI6MTY1MzAxMDMzNX0sImRydWdzIjpbeyJpZCI6NDU3ODQ2MCwicHJlc2NyaXB0aW9uSWQiOjUxMzU4NDcsIm1lZGljYXRpb25HZW5yZSI6MSwiY29udGVudElkIjo3MjU3NiwidGl0bGUiOiLmsJ/og57lmKfllbbniYciLCJzcGVjaWZpY2F0aW9uIjoiMC41Zyo1MOeJhyIsInF1YW50aXR5Ijo0LCJzYWxlUHJpY2UiOjE1ODAwLCJ1c2FnZXMiOiLmr4/ml6XkuKTmrKHvvJsy54mHL+asoe+8m+WPo+acjSIsInN0cnVjdHVyZWRVc2FnZXMiOnsidXNhZ2UiOiLlj6PmnI0iLCJkb3NhZ2UiOiIyIiwiZG9zYWdlUGVyVGltZVVuaXQiOiLniYcv5qyhIiwiY3ljbGUiOiLmr4/ml6XkuKTmrKEifSwiaW5ncmVkaWVudCI6IuacrOWTgeS4u+imgeaIkOS7veS4uuawn+iDnuWYp+WVtuOAgiIsInNwdUlkIjoxNDg1NTYsInRyYWRlTmFtZSI6IkNQVVBDIiwib3RjVHlwZSI6MCwiaXNEb2N0b3JTaWduIjpmYWxzZSwiZHJ1Z1RhZ3MiOiIiLCJwcmVnbmFuY3lDb250cmFpbmRpY2F0aW9uIjowLCJpc1RveGljIjpmYWxzZSwicmVjb21tZW5kRG9zZSI6IiIsImlzQ29udGFpbkFkanV2YW50IjpmYWxzZSwiY29tYmluZUJhZ0lkIjowLCJzcHUiOm51bGx9XX19ECiyAQsKB2RvY3RvcioQAA=="
	decoded, _ := base64.StdEncoding.DecodeString(data)
	msg := &message.Message{}
	proto.Unmarshal(decoded, msg)

	m, _ := json.Marshal(msg)
	fmt.Println("msg:", string(m))

	return
	hd := hashids.NewData()
	hd.Alphabet = hashids.DefaultAlphabet
	hd.Salt = "<)Toyota~86(>"
	tk, _ := hashids.NewWithData(hd).EncodeInt64([]int64{11111111, 2222222, 3333333, 4444444})
	ids, _ := hashids.NewWithData(hd).DecodeInt64WithError(tk)
	fmt.Println("tk:", tk, ids)

	hr := hashring.New([]string{"comet-0-1", "comet-0-2", "comet-1-1", "comet-1-2"})
	hr.AddNode("comet-1-1")
	hr.AddNode("comet-1-2")

	for i := 0; i < 100; i ++ {

		node, _ := hr.GetNode(fmt.Sprintf("%d", i))
		node2, _ := hr.GetNode(fmt.Sprintf("%d", 100 - i))
		fmt.Println(fmt.Sprintf("%d:%s:%d:%s", i, node, 100 - i, node2))
	}

}
